import { TEXT } from "../utils/Const.js";

export const newPropertyConst = [
  {
    name: "state",
    label: "State",
    type: "select",
    parentclassName: "property-w-1",
    isRequired: true,
    requiredErrorMessage: "Please select a state.",
  },
  {
    name: "city",
    label: "City",
    type: "select",
    parentclassName: "property-w-1",
    isRequired: true,
    requiredErrorMessage: "Please select a city.",
  },
  {
    name: "sectorNumber",
    label: "Location",
    type: "select",
    parentclassName: "property-w-1",
    isRequired: true,
    requiredErrorMessage: "Please select a sector number.",
  },
  {
    name: "plotNumber",
    label: "Plot Number",
    parentclassName: "property-w-1",
    type: TEXT,
    isRequired: false,
    requiredErrorMessage: "Please enter a plot number.",
  },
  {
    name: "size",
    nameType: "sizeType",
    parentclassName: "property-w-1",
    label: "Size",
    className: "property-price-class",
    type: "size",
    options: [
      { value: "Sq.Yd.", label: "Sq.Yd." },
      { value: "Sq.Mt.", label: "Sq.Mt." },
    ],
    defaultOption: { value: "Sq.Yd.", label: "Sq.Yd." },
    isRequired: true,
    requiredErrorMessage: "Please enter a size.",
  },

  {
    name: "accommodation",
    label: "Accommodation",
    type: "select",
    parentclassName: "property-w-1",
    isRequired: true,
    requiredErrorMessage: "Please select an accommodation.",
  },
  {
    name: "facing",
    label: "Facing",
    type: "select",
    parentclassName: "property-w-1",
    isRequired: true,
    requiredErrorMessage: "Please select a facing direction.",
  },

  {
    name: "parkFacing",
    label: "Park Facing",
    type: "radio",
    parentclassName: "property-w-1",
    dataKey: "parkFacing",
    isRequired: true,
    options: [
      { value: "Yes", label: "Yes" },
      { value: "No", label: "No" },
    ],
    requiredErrorMessage: "Please select an option for park facing.",
  },
  {
    name: "corner",
    label: "Corner",
    type: "radio",
    isRequired: true,
    parentclassName: "property-w-1",
    dataKey: "corner",
    options: [
      { value: "Yes", label: "Yes" },
      { value: "No", label: "No" },
    ],
    requiredErrorMessage: "Please select an option for corner.",
  },

  {
    name: "builderName",
    label: "Builder Name",
    parentclassName: "property-w-2",
    type: TEXT,
    isRequired: false,
    requiredErrorMessage: "Please enter a builder name.",
  },
  {
    name: "builderContact",
    label: "Builder Contact",
    parentclassName: "property-w-2",
    type: TEXT,
    isRequired: false,
    requiredErrorMessage: "Please enter a builder contact.",
    regex: /^(\+\d{1,2}\s?)?1?\-?\.?\s?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/,
    regexErrorMessage: "Invalid builder contact",
  },
  {
    name: "ownerContact",
    label: "Owner Contact",
    parentclassName: "property-w-2",
    type: TEXT,
    isRequired: false,
    requiredErrorMessage: "Please enter a owner contact.",
    regex: /^(\+\d{1,2}\s?)?1?\-?\.?\s?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/,
    regexErrorMessage: "Invalid owner contact",
  },
  {
    name: "title",
    label: "Primary Title",
    parentclassName: "property-w-2 property-margin-r large_field_wrapper",
    className: "large_field",
    type: "creatable_select",
    isRequired: true,
    requiredErrorMessage: "Please enter a title.",
  },
  {
    name: "detailTitle",
    parentclassName: "property-w-2 property-margin-r large_field_wrapper",
    className: "large_field",
    label: "Secondary Title",
    type: TEXT,
    textLimit: 100,
    isRequired: true,
    requiredErrorMessage: "Please enter a detail title.",
  },
  {
    name: "description",
    label: "Description",
    type: "textarea",
    parentclassName: "property-w-3 column-property large_field_wrapper",
    className: "column-property large_textarea_field",
    isRequired: true,
    textLimit: 100,
    requiredErrorMessage: "Please enter a description.",
  },
  // {
  //   name: "floor",
  //   label: "Floor 1",
  //   parentclassName: "column-property property-w-1",
  //   type: "select",
  //   isRequired: true,
  //   requiredErrorMessage: "Please enter a floor.",
  // },
  {
    name: "floorOnePrice",
    label: "Floor 1 Price",
    parentclassName: "property-w-1",
    type: "price",
    className: "property-price-class",
  },
  {
    name: "floorOnePossession",
    label: "Floor 1 Possession",
    type: "select",
    parentclassName: "property-w-1",
  },
  {
    name: "floorTwoPrice",
    label: "Floor 2 Price",
    parentclassName: "property-w-1",
    type: "price",
    className: "property-price-class",
  },
  {
    name: "floorTwoPossession",
    label: "Floor 2 Possession",
    type: "select",
    parentclassName: "property-w-1",
  },
  {
    name: "floorThreePrice",
    label: "Floor 3 Price",
    parentclassName: "property-w-1",
    type: "price",
    className: "property-price-class",
  },
  {
    name: "floorThreePossession",
    label: "Floor 3 Possession",
    type: "select",
    parentclassName: "property-w-1",
  },
  {
    name: "floorFourPrice",
    label: "Floor 4 Price",
    parentclassName: "property-w-1",
    type: "price",
    className: "property-price-class",
  },
  {
    name: "floorFourPossession",
    label: "Floor 4 Possession",
    type: "select",
    parentclassName: "property-w-1",
  },
  {
    name: "thumbnailFile",
    label: "Front (Main) Image",
    parentclassName: "property-w-1",
    type: "file",
    isMulti: false,
    isRequired: true,
    requiredErrorMessage: "Please Add Thumbnail Image",
    acceptedFileTypes: "image/*",
  },
  {
    name: "normalImageFile",
    label: "More (Normal) Images",
    type: "file",
    isMulti: true,
    parentclassName: "property-w-1",
    isRequired: false,
    requiredErrorMessage: "Please Add Normal Image",
    acceptedFileTypes: "image/*",
  },
  {
    name: "threeSixtyImages",
    label: "Only 360 Images",
    parentclassName: "property-w-1",
    type: "file",
    isMulti: true,
    isRequired: false,
    requiredErrorMessage: "Please Add 360 Image",
    acceptedFileTypes: "image/*",
  },
  {
    name: "layoutFile",
    label: "Layout Plan",
    parentclassName: "property-w-1",
    type: "file",
    isMulti: true,
    isRequired: false,
    requiredErrorMessage: "Please Add Layout Image",
    acceptedFileTypes: "image/*",
  },
  {
    name: "videoFile",
    label: "Load Videos",
    parentclassName: "property-w-1",
    type: "file",
    isMulti: true,
    isRequired: false,
    requiredErrorMessage: "Please Add Video File",
    acceptedFileTypes: "video/*",
  },
  {
    name: "virtualFile",
    label: "Load Virtual Tour",
    parentclassName: "property-w-1",
    type: "file",
    isMulti: true,
    isRequired: false,
    requiredErrorMessage: "Please Add Virtual Image",
    acceptedFileTypes: "image/*",
  },
];
export const bulkuploadheader = [
  {
    property: [
      "Property id",
      "City",
      "Location",
      "Plot Number",
      "Size",
      "Floor",
      "Accommodation",
      "Possession",
      "Price",
      "Facing",
      "Park Facing",
      "Corner",
      "Description",
      "1st Page Title",
      "2 Page Title",
      "Channel Partner Name",
      "Channel Contact Number",
      "Builder name",
      "Contact",
      "THUMBNAIL IMAGE NAME",
      "FOLDER NAME",
    ],
  },
];
